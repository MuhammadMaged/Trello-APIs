{
	"info": {
		"_postman_id": "18d6a519-120e-4cbd-819e-c2480ba11568",
		"name": "Trello REST APIs",
		"description": "#### **A Trello REST APIs E2E testing collections ready to run**\n\nThe collection covers various endpoints and assertions to ensure the APIs' functionality using (Post - Put - Get - Delete ) requests\n\n#### **Tasks :**\n\n- Create a Board\n    \n- Update a Board\n    \n- Get a Board\n    \n- Create a List\n    \n- Update a List\n    \n- Get a List\n    \n- Create a Card\n    \n- Update a Card\n    \n- Get a Card\n    \n- Create a Checklist\n    \n- Update a Checklist\n    \n- Get a Checklist\n    \n- Create an Item on Checklist\n    \n- Get an Item on Checklist\n    \n- Delete an Item on Checklist\n    \n- Delete a Checklist\n    \n- Delete a Card\n    \n- Delete a Board",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39964539"
	},
	"item": [
		{
			"name": "Create a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"BoardID\", jsonData.id);\r",
							"\r",
							"\r",
							"var Name = pm.environment.get(\"BoardName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/boards/?name={{BoardName}}&key={{key}}&token={{token}}&defaultLists=false",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{BoardName}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var Name = pm.environment.get(\"UpdatedBoardName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/boards/{{BoardID}}?key={{key}}&token={{token}}&name={{UpdatedBoardName}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"boards",
						"{{BoardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{UpdatedBoardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var Name = pm.environment.get(\"UpdatedBoardName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/boards/{{BoardID}}?key={{key}}&token={{token}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"boards",
						"{{BoardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var JsonFile = pm.response.json()\r",
							"pm.environment.set(\"ListID\", JsonFile.id);\r",
							"\r",
							"var Name = pm.environment.get(\"ListName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/lists?name={{ListName}}&idBoard={{BoardID}}&key={{key}}&token={{token}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "{{ListName}}"
						},
						{
							"key": "idBoard",
							"value": "{{BoardID}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var Name = pm.environment.get(\"UpdatedListName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/lists/{{ListID}}/?key={{key}}&token={{token}}&name={{UpdatedListName}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"lists",
						"{{ListID}}",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{UpdatedListName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var Name = pm.environment.get(\"UpdatedListName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/lists/{{ListID}}/?key={{key}}&token={{token}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"lists",
						"{{ListID}}",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var JsonFile = pm.response.json()\r",
							"pm.environment.set(\"CardID\", JsonFile.id);\r",
							"\r",
							"var Name = pm.environment.get(\"CardName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{Trello_url}}/1/cards?idList={{ListID}}&key={{key}}&token={{token}}&name={{CardName}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{ListID}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{CardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var Name = pm.environment.get(\"UpdatedCardName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{Trello_url}}/1/cards/{{CardID}}?key={{key}}&token={{token}}&name={{UpdatedCardName}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"cards",
						"{{CardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{UpdatedCardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var Name = pm.environment.get(\"UpdatedCardName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{Trello_url}}/1/cards/{{CardID}}?key={{key}}&token={{token}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"cards",
						"{{CardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var JsonFile = pm.response.json()\r",
							"pm.environment.set(\"ChecklistID\", JsonFile.id);\r",
							"\r",
							"var Name = pm.environment.get(\"ChecklistName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/checklists?idCard={{CardID}}&key={{key}}&token={{token}}&name={{ChecklistName}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{CardID}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{ChecklistName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var Name = pm.environment.get(\"UpdatedChecklist\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/checklists/{{ChecklistID}}?key={{key}}&token={{token}}&name={{UpdatedChecklist}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{ChecklistID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{UpdatedChecklist}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var Name = pm.environment.get(\"UpdatedChecklist\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/checklists/{{ChecklistID}}?key={{key}}&token={{token}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{ChecklistID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an Item on Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var JsonFile = pm.response.json()\r",
							"pm.environment.set(\"ItemID\", JsonFile.id);\r",
							"\r",
							"var Name = pm.environment.get(\"ItemName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/checklists/{{ChecklistID}}/checkItems?key={{key}}&token={{token}}&name={{ItemName}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{ChecklistID}}",
						"checkItems"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{ItemName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an Item on Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"var Name = pm.environment.get(\"ItemName\");\r",
							"pm.test(\"The Name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(Name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/checklists/{{ChecklistID}}/checkItems/{{ItemID}}?key={{key}}&token={{token}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{ChecklistID}}",
						"checkItems",
						"{{ItemID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an Item on Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/checklists/{{ChecklistID}}/checkItems/{{ItemID}}?key={{key}}&token={{token}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{ChecklistID}}",
						"checkItems",
						"{{ItemID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/checklists/{{ChecklistID}}?key={{key}}&token={{token}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{ChecklistID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/cards/{{CardID}}?key={{key}}&token={{token}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"cards",
						"{{CardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Trello_url}}/1/boards/{{BoardID}}?key={{key}}&token={{token}}",
					"host": [
						"{{Trello_url}}"
					],
					"path": [
						"1",
						"boards",
						"{{BoardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	]
}